{{#fillHtmlContent 'css'}}
<link rel="stylesheet" href="/css/admin/dashboard.css">
{{/fillHtmlContent}}


<div class="dashboard">
    <h1>Dashboard</h1>
    <div class="cards">
        <a href="#" class="card" style="background-color: #f4cccc;">
            <span class="card-icon">üìÑ</span>
            <span class="card-value">B√†i vi·∫øt: {{totalNewsCount}}</span>
        </a>
        <a href="#" class="card" style="background-color: #d1e7ff;">
            <span class="card-icon">üë•</span>
            <span class="card-value">T·ªïng th√†nh vi√™n: {{totalUserCount}}</span>
        </a>
        <a href="#" class="card" style="background-color: #fce5cd;">
            <span class="card-icon">üßë‚Äçüíº</span>
            <span class="card-value">Nh√¢n s·ª±: {{totalStaffCount}}</span>
        </a>
    </div>
    <div class="cards">
        <a href="#" class="card" style="background-color: #d9f7be;">
            <span class="card-icon">‚úîÔ∏è</span>
            <span class="card-value">ƒê√£ duy·ªát: {{totalAcceptNewsCount}}</span>
        </a>
        <a href="#" class="card" style="background-color: #ffebb8;">
            <span class="card-icon">‚è≥</span>
            <span class="card-value">Ch·ªù ph√™ duy·ªát: {{totalNotAcceptNewCount}}</span>
        </a>
        <a href="#" class="card" style="background-color: #f4cccc;">
            <span class="card-icon">üö´</span>
            <span class="card-value">B·ªã t·ª´ ch·ªëi: {{totalNotRefuseNewCount}}</span>
        </a>
    </div>

    <!-- C√°c bi·ªÉu ƒë·ªì -->
    <div class="charts-container">
        <div class="chart">
            <h2>T·ªïng quan c√°c b√†i vi·∫øt t·ª´ng chuy√™n m·ª•c</h2>
            <div class="chart-container">
                <canvas id="categoryChart"></canvas>
            </div>
        </div>

        <div class="chart">
            <h2>T·ªïng s·ªë l∆∞·ª£ng view c√°c b√†i vi·∫øt theo chuy√™n m·ª•c</h2>
            <div class="chart-container">
                <canvas id="categoryPieChart"></canvas>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const labelsBar = {{{ labelsBar }}};
    const dataBar = {{{ dataBar }}};
    const ctxBar = document.getElementById('categoryChart').getContext('2d');
    const categoryChart = new Chart(ctxBar, {
        type: 'bar',
        data: {
            labels: labelsBar,
            datasets: [
                {
                    label: 'Qu√Ω 1',
                    data: dataBar.Q1,
                    backgroundColor: 'rgba(54, 92, 235, 0.5)'
                },
                {
                    label: 'Qu√Ω 2',
                    data: dataBar.Q2,
                    backgroundColor: 'rgba(255, 206, 86, 0.5)'
                },
                {
                    label: 'Qu√Ω 3',
                    data: dataBar.Q3,
                    backgroundColor: 'rgba(75, 192, 102, 0.5)'
                },
                {
                    label: 'Qu√Ω 4',
                    data: dataBar.Q4,
                    backgroundColor: 'rgba(153, 102, 255, 0.5)'
                },
            ]
        }
        ,
        options: {
            responsive: true,
            maintainAspectRatio: false,  // B·ªè gi·ªõi h·∫°n t·ª∑ l·ªá
        }

    });

    // Bi·ªÉu ƒë·ªì tr√≤n (Pie Chart)
    const labelsPie = {{{ labelsPie }}};
    const dataPie = {{{ dataPie }}};
    const backgroundColors = labelsPie.map(() => {
        const randomColor = `hsl(${Math.floor(Math.random() * 360)}, 70%, 60%)`;
        return randomColor;
    });
    const ctxPie = document.getElementById('categoryPieChart').getContext('2d');
    const categoryPieChart = new Chart(ctxPie, {
        type: 'pie',
        data: {
            labels: labelsPie,
            datasets: [{
                data: dataPie,
                backgroundColor:backgroundColors,
                borderWidth: 1,
                borderColor: '#fff',
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'right',
                    labels: {
                        font: {
                            size: 14
                        }
                    }
                },
                tooltip: {
                    callbacks: {
                        label: function (tooltipItem) {
                            return tooltipItem.label + ': ' + tooltipItem.raw;
                        }
                    }
                }
            }
        }
    });
</script>
{{#fillHtmlContent 'js'}}
<script>

</script>
{{/fillHtmlContent}}